{{template "base" .}}

{{define "content" }}
    <div class="container">
        <div class="row">
            <div class="col">
                <h1 class="mt-5">Testing Microservices</h1>
                <hr>

                <a id="brokerBtn" class="btn btn-outline-secondary" href="#">Test the Broker</a>
                <a id="authBrokerBtn" class="btn btn-outline-secondary" href="#">Test Authentication</a>
                <a id="logBtn" class="btn btn-outline-secondary" href="#">Test Log</a>
                <a id="logRPCBtn" class="btn btn-outline-secondary" href="#">Test Log RPC</a>
                <a id="mailBtn" class="btn btn-outline-secondary" href="#">Test Mail</a>

                <div id="output" class="mt-5" style="outline: 2px solid black; padding: 2em;">
                    <span class="text-muted">Output shows here...</span>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col">
                <h4 class="mt-5">Sent</h4>
                <div class="mt-1" style="outline: 2px solid black; padding: 2em;">
                    <pre id="payload"><span class="text-muted">Nothing sent yet...</span></pre>
                </div>
            </div>
            <div class="col">
                <h4 class="mt-5">Received</h4>
                <div class="mt-1" style="outline: 2px solid black; padding: 2em;">
                    <pre id="received"><span class="text-muted">Nothing received yet...</span></pre>
                </div>
            </div>
        </div>
    </div>
{{end}}

{{define "js"}}
    <script>
        const brokerBtn = document.getElementById('brokerBtn');
        const authBrokerBtn = document.getElementById('authBrokerBtn');
        const logBtn = document.getElementById('logBtn');
        const logRPCBtn = document.getElementById('logRPCBtn');
        const mailBtn = document.getElementById('mailBtn');
        const output = document.getElementById('output');
        const payload = document.getElementById('payload');
        const received = document.getElementById('received');

        const genericClickCallback = (action, payloadName, payloadObject, method) => {
            const payloadData = {
                action: action,
                [payloadName]: payloadObject
            };
            const headers = new Headers();
            headers.append('Content-Type', 'application/json');

            const body = {
                method: method,
                headers: headers,
                body: JSON.stringify(payloadData)
            };

            fetch(`http://localhost:9090/handle`, body)
                .then(res => res.json())
                .then(data => {
                    payload.innerHTML = JSON.stringify(payloadData, null, 4);
                    received.innerHTML = JSON.stringify(data, null, 4);

                    if(data.error){
                        output.innerHTML += `<br><strong>Error</strong>: ${data.message}`;
                    }else{
                        output.innerHTML += `<br><strong>Response from Broker service</strong>: ${data.message}`;
                    }
                }).catch(err => {
                output.innerHTML += `<br><strong>Error</strong>: ${err}`;
            });
        };

        mailObj = { //hardcoded for tests
            from: "me@example.com",
            to: "pier@paul.com",
            subject: "Test Email",
            message: "Hello world email!"
        }
        mailBtn.addEventListener("click", () => genericClickCallback("mail", "mail", mailObj, "POST"));

        logObj = {
            name: "event",
            data: "Some log information..."
        };
        logBtn.addEventListener("click", () => genericClickCallback("log", "log", logObj, "POST"));
        logRPCBtn.addEventListener("click", () => genericClickCallback("logrpc", "log", logObj, "POST"));

        brokerBtn.addEventListener("click", () => {
            const body = {
                method: "POST"
            }

            fetch(`http://localhost:9090`, body)
                .then(res => res.json())
                .then(data => {
                    payload.innerHTML = "empty request [POST]"
                    received.innerHTML = JSON.stringify(data, null, 4);

                    if(data.error){
                        console.log(data.message);
                    }else{
                        output.innerHTML += `<br><strong>Response from Broker service</strong>: ${data.message}`;
                    }
                }).catch(err => {
                    output.innerHTML += `<br><strong>Error</strong>: ${err}`;
                });
        });

        authObj = {
            email: "admin@example.com",
            password: "verysecret",
        };
        authBrokerBtn.addEventListener("click", () => genericClickCallback("auth", "auth", authObj, "POST"));

    </script>
{{end}}
